/*
 * Arduino Keypad Calculator Program
 */

#include <LiquidCrystal.h>  // Header file for LCD from https://www.arduino.cc/en/Reference/LiquidCrystal
#include <Keypad.h> // Header file for Keypad from https://github.com/Chris--A/Keypad

const byte ROWS = 4; // Four rows
const byte COLS = 4; // Four columns

// Define the Keymap
char keys[ROWS][COLS] = {
  {'7', '8', '9', '/'},
  {'4', '5', '6', '*'},
  {'1', '2', '3', '-'},
  {'C', '0', '=', '+'}
};

byte rowPins[ROWS] = {0, 1, 2, 3}; // Connect keypad ROW0, ROW1, ROW2 and ROW3 to these Arduino pins.
byte colPins[COLS] = {4, 5, 6, 7}; // Connect keypad COL0, COL1, COL2 and COL3 to these Arduino pins.

Keypad kpd = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS); // Create the Keypad

const int rs = 8, en = 9, d4 = 10, d5 = 11, d6 = 12, d7 = 13; // Pins to which LCD is connected
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

long Num1, Num2, Number;
char key, action;
bool result = false;

void setup() {
  lcd.begin(16, 2); // We are using a 16*2 LCD display
  lcd.print("DIY Calculator"); // Display an intro message
  lcd.setCursor(0, 1); // Set the cursor to column 0, line 1
  lcd.print("-CircuitDigest"); // Display an intro message

  delay(2000); // Wait for display to show info
  lcd.clear(); // Then clear it
}

void loop() {
  key = kpd.getKey(); // Storing pressed key value in a char

  if (key != NO_KEY)
    DetectButtons();

  if (result == true)
    CalculateResult();

  DisplayResult();
}

void DetectButtons() {
  lcd.clear(); // Clear the LCD

  if (key == 'C') { // If cancel Button is pressed
    Serial.println("Button Cancel");
    Number = Num1 = Num2 = 0;
    result = false;
  }

  if (isDigit(key)) { // If a digit button is pressed
    Serial.print("Button ");
    Serial.println(key);
    if (Number == 0)
      Number = key - '0'; // Convert char to int
    else
      Number = (Number * 10) + (key - '0'); // Append digit
  }

  if (key == '=') { // If equal Button is pressed
    Serial.println("Button Equal");
    Num2 = Number;
    result = true;
  }

  if (key == '+' || key == '-' || key == '*' || key == '/') { // If an operator button is pressed
    Num1 = Number;
    Number = 0;
    action = key;
    Serial.print("Operation: ");
    Serial.println(action);
    delay(100);
  }
}

void CalculateResult() {
  switch (action) {
    case '+':
      Number = Num1 + Num2;
      break;
    case '-':
      Number = Num1 - Num2;
      break;
    case '*':
      Number = Num1 * Num2;
      break;
    case '/':
      Number = Num1 / Num2;
      break;
  }
}

void DisplayResult() {
  lcd.setCursor(0, 0); // Set the cursor to column 0, line 0
  lcd.print(Num1);
  lcd.print(action);
  lcd.print(Num2);

  if (result == true) {
    lcd.print(" =");
    lcd.print(Number);
  }

  lcd.setCursor(0, 1); // Set the cursor to column 0, line 1
  lcd.print(Number); // Display the result
}

bool isDigit(char key) {
  return (key >= '0' && key <= '9');
}
